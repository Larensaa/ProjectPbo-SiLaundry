/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package halaman;

import static halaman.Config.writeLog;
import java.awt.Color;
import java.sql.Connection; // tambahkan juga untuk load
import java.sql.SQLException;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
//import javax.swing.table.DefaultTableModel; // tambahkan untuk load
import javax.swing.JOptionPane; //tambahkan untuk menampilkan pesan
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kelompok 2
 */
public class FPelanggan extends javax.swing.JFrame {

    private boolean isEditing = false;

    /**
     * Creates new form FPelanggan
     */
    public FPelanggan() {
        initComponents();
        setLocationRelativeTo(null);
        load_table();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTambah = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePelanggan = new javax.swing.JTable();
        txtNamaPelanggan = new javax.swing.JTextField();
        txtNoTelp = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        jAlamat = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jUtama = new javax.swing.JLabel();
        jKeluar = new javax.swing.JLabel();
        jPelanggan = new javax.swing.JLabel();
        jTransaksi = new javax.swing.JLabel();
        jLayanan = new javax.swing.JLabel();
        jKaryawan = new javax.swing.JLabel();
        jTentang = new javax.swing.JLabel();
        jDesain = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnTambah.setBackground(new java.awt.Color(47, 171, 225));
        btnTambah.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        btnTambah.setForeground(new java.awt.Color(255, 255, 255));
        btnTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Tambah.png"))); // NOI18N
        btnTambah.setText(" Tambah");
        btnTambah.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnTambah.setBorderPainted(false);
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });
        getContentPane().add(btnTambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 320, 160, 48));

        btnEdit.setBackground(new java.awt.Color(47, 171, 225));
        btnEdit.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit.png"))); // NOI18N
        btnEdit.setText("  Edit");
        btnEdit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEdit.setBorderPainted(false);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        getContentPane().add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 320, 160, 48));

        btnHapus.setBackground(new java.awt.Color(255, 0, 0));
        btnHapus.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        btnHapus.setForeground(new java.awt.Color(255, 255, 255));
        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Hapus.png"))); // NOI18N
        btnHapus.setText("  Hapus");
        btnHapus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnHapus.setBorderPainted(false);
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        getContentPane().add(btnHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 320, 160, 48));

        jTablePelanggan.setBackground(new java.awt.Color(255, 255, 255));
        jTablePelanggan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTablePelanggan);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 400, 720, 300));

        txtNamaPelanggan.setBackground(new java.awt.Color(217, 217, 217));
        txtNamaPelanggan.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtNamaPelanggan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtNamaPelanggan.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtNamaPelanggan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNamaPelangganFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNamaPelangganFocusLost(evt);
            }
        });
        txtNamaPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaPelangganActionPerformed(evt);
            }
        });
        getContentPane().add(txtNamaPelanggan, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 210, 320, 20));

        txtNoTelp.setBackground(new java.awt.Color(217, 217, 217));
        txtNoTelp.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtNoTelp.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtNoTelp.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtNoTelp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNoTelpFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNoTelpFocusLost(evt);
            }
        });
        txtNoTelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoTelpActionPerformed(evt);
            }
        });
        getContentPane().add(txtNoTelp, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 270, 320, 20));

        txtId.setBackground(new java.awt.Color(217, 217, 217));
        txtId.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtId.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtId.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdFocusLost(evt);
            }
        });
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        getContentPane().add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 150, 320, 20));

        jTextArea1.setBackground(new java.awt.Color(217, 217, 217));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(null);
        jTextArea1.setSelectionColor(new java.awt.Color(217, 217, 217));
        jAlamat.setViewportView(jTextArea1);

        getContentPane().add(jAlamat, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 150, 330, 100));

        jUtama.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jUtama.setEnabled(false);
        jUtama.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jUtamaFocusGained(evt);
            }
        });
        jUtama.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jUtamaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jUtamaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jUtamaMouseExited(evt);
            }
        });
        getContentPane().add(jUtama, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 112, 340, 113));

        jKeluar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jKeluarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jKeluarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jKeluarMouseExited(evt);
            }
        });
        getContentPane().add(jKeluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 710, 342, 60));

        jPelanggan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPelanggan.setEnabled(false);
        jPelanggan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPelangganFocusGained(evt);
            }
        });
        jPelanggan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPelangganMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPelangganMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPelangganMouseExited(evt);
            }
        });
        getContentPane().add(jPelanggan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 340, 111));

        jTransaksi.setToolTipText("");
        jTransaksi.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTransaksi.setEnabled(false);
        jTransaksi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTransaksiFocusGained(evt);
            }
        });
        jTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTransaksiMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTransaksiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTransaksiMouseExited(evt);
            }
        });
        getContentPane().add(jTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 340, 111));

        jLayanan.setToolTipText("");
        jLayanan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jLayanan.setEnabled(false);
        jLayanan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jLayananFocusGained(evt);
            }
        });
        jLayanan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLayananMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLayananMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLayananMouseExited(evt);
            }
        });
        getContentPane().add(jLayanan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 437, 340, 110));

        jKaryawan.setToolTipText("");
        jKaryawan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jKaryawan.setEnabled(false);
        jKaryawan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jKaryawanFocusGained(evt);
            }
        });
        jKaryawan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jKaryawanMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jKaryawanMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jKaryawanMouseExited(evt);
            }
        });
        getContentPane().add(jKaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 545, 340, 110));

        jTentang.setToolTipText("");
        jTentang.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTentang.setEnabled(false);
        jTentang.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTentangFocusGained(evt);
            }
        });
        jTentang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTentangMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTentangMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTentangMouseExited(evt);
            }
        });
        getContentPane().add(jTentang, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 655, 340, 57));

        jDesain.setBackground(new java.awt.Color(217, 217, 217));
        jDesain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/FPelanggan.png"))); // NOI18N
        jDesain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDesainMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jDesainMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jDesainMouseExited(evt);
            }
        });
        getContentPane().add(jDesain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void load_table() {
        // Membuat tampilan model tabel
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                // Semua sel tidak bisa diedit langsung
                return false;
            }
        };

        model.addColumn("No");
        model.addColumn("ID Pelanggan");
        model.addColumn("Nama");
        model.addColumn("No. Telepon");
        model.addColumn("Alamat");

        // Hapus data di tabel sebelum memuat ulang
        jTablePelanggan.setModel(new DefaultTableModel()); // Bersihkan tabel

        // Menampilkan data dari database ke dalam tabel
        try {
            int no = 1;
            String sql = "SELECT * FROM t_pelanggan"; // Query untuk mengambil data pelanggan
            java.sql.Connection conn = Config.configDB(); // Menghubungkan ke database
            java.sql.Statement stm = conn.createStatement(); // Membuat statement
            java.sql.ResultSet res = stm.executeQuery(sql); // Menjalankan query dan mendapatkan hasil

            // Menambahkan data ke dalam model tabel
            while (res.next()) {
                model.addRow(new Object[]{
                    no++, // No urut
                    res.getString("id_pelanggan"), // ID Pelanggan
                    res.getString("nama"), // Nama Pelanggan
                    res.getString("no_telp"), // No Telepon
                    res.getString("alamat") // Alamat Pelanggan
                });
            }

            // Menampilkan model tabel ke jTablePelanggan
            jTablePelanggan.setModel(model);
            writeLog("Tampilkan data ke Frame " + getClass().getSimpleName()); // Log aktivitas
        } catch (SQLException e) {
            writeLog("Data tidak dapat ditampilkan: " + e.getMessage()); // Log error
            JOptionPane.showMessageDialog(this, "Data tidak dapat ditampilkan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
        String id = txtId.getText();  // id pelanggan
        String nama = txtNamaPelanggan.getText();  // Nama pelanggan
        String noTelp = txtNoTelp.getText();  // Nomor telepon
        String alamat = jTextArea1.getText();  // Alamat pelanggan

        // Validasi apakah semua field sudah diisi
        if (id.isEmpty() || nama.isEmpty() || noTelp.isEmpty() || alamat.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
            return;  // Jika ada field yang kosong, batalkan aksi
        }

        // Melakukan koneksi ke database dan menambahkan data pelanggan
        try (Connection conn = Config.configDB()) {
            // SQL query untuk menambahkan data pelanggan dengan id_pelanggan
            String sql = "INSERT INTO t_pelanggan (id_pelanggan, nama, no_telp, alamat) VALUES (?, ?, ?, ?)";
            var pst = conn.prepareStatement(sql);

            // Menyiapkan data untuk dimasukkan ke dalam query
            pst.setString(1, id);  // Menyertakan id_pelanggan
            pst.setString(2, nama);  // Nama
            pst.setString(3, noTelp);  // No Telepon
            pst.setString(4, alamat);  // Alamat

            // Menjalankan query insert
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan!");  // Menampilkan pesan sukses
            load_table();  // Memuat ulang data tabel
        } catch (Exception e) {
            // Menangani exception jika ada error
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal menambahkan data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if (!isEditing) {
            // Jika mode edit belum aktif
            int selectedRow = jTablePelanggan.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(null, "Pilih pelanggan yang ingin diedit", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Ambil data dari tabel sesuai dengan indeks kolom
            String id = jTablePelanggan.getValueAt(selectedRow, 1).toString(); // Kolom ID Pelanggan
            String nama = jTablePelanggan.getValueAt(selectedRow, 2).toString(); // Kolom Nama
            String noTelp = jTablePelanggan.getValueAt(selectedRow, 3).toString(); // Kolom No Telepon
            String alamat = jTablePelanggan.getValueAt(selectedRow, 4).toString(); // Kolom Alamat

            // Isi form dengan data yang benar
            txtId.setText(id);
            txtNamaPelanggan.setText(nama);
            txtNoTelp.setText(noTelp);
            jTextArea1.setText(alamat);

            // Ubah status menjadi editing
            isEditing = true;
            btnEdit.setText("Simpan"); // Mengubah teks tombol menjadi Simpan

        } else {
            // Mode Edit aktif, simpan perubahan
            String id = txtId.getText();
            String nama = txtNamaPelanggan.getText();
            String noTelp = txtNoTelp.getText();
            String alamat = jTextArea1.getText();

            // Validasi input
            if (nama.isEmpty() || noTelp.isEmpty() || alamat.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Semua field harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Update data di database
            try (Connection conn = Config.configDB()) {
                String sql = "UPDATE t_pelanggan SET nama = ?, no_telp = ?, alamat = ? WHERE id_pelanggan = ?";
                var pst = conn.prepareStatement(sql);
                pst.setString(1, nama);
                pst.setString(2, noTelp);
                pst.setString(3, alamat);
                pst.setString(4, id);
                pst.executeUpdate();

                JOptionPane.showMessageDialog(null, "Data berhasil diperbarui!");

                // Muat ulang tabel untuk menampilkan data terbaru
                load_table();

            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Gagal memperbarui data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }

            // Kembali ke mode normal
            isEditing = false;
            btnEdit.setText("Edit");
            txtId.setEditable(true); // Aktifkan kembali input ID jika diperlukan
        }

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int selectedRow = jTablePelanggan.getSelectedRow();

        // Cek jika tidak ada baris yang dipilih
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Pilih pelanggan yang ingin dihapus", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Ambil ID dari kolom yang sesuai (misalnya kolom ID Pelanggan adalah indeks 1)
        String id = jTablePelanggan.getValueAt(selectedRow, 1).toString();

        // Tampilkan konfirmasi sebelum menghapus
        int confirm = JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try (Connection conn = Config.configDB()) {
                // Query untuk menghapus data pelanggan berdasarkan ID
                String sql = "DELETE FROM t_pelanggan WHERE id_pelanggan = ?";
                var pst = conn.prepareStatement(sql);
                pst.setString(1, id);  // Set ID yang dipilih pada parameter query
                pst.executeUpdate();  // Eksekusi query

                // Pesan konfirmasi penghapusan berhasil
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");

                // Muat ulang tabel untuk menampilkan data terbaru
                load_table();
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Gagal menghapus data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void txtNamaPelangganFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNamaPelangganFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_txtNamaPelangganFocusGained

    private void txtNamaPelangganFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNamaPelangganFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtNamaPelangganFocusLost

    private void txtNamaPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaPelangganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaPelangganActionPerformed

    private void txtNoTelpFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNoTelpFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoTelpFocusGained

    private void txtNoTelpFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNoTelpFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoTelpFocusLost

    private void txtNoTelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoTelpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoTelpActionPerformed

    private void txtIdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdFocusGained

    private void txtIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdFocusLost

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void jKeluarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKeluarMouseClicked
        // TODO add your handling code here:
        jKeluar.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        int response = JOptionPane.showConfirmDialog(this,
                "Apakah Anda yakin ingin keluar?",
                "Konfirmasi Keluar",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);

        if (response == JOptionPane.YES_OPTION) {
            //            System.exit(0);
            FLogin loginForm = new FLogin();
            loginForm.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_jKeluarMouseClicked

    private void jKeluarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKeluarMouseEntered
        jKeluar.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));


    }//GEN-LAST:event_jKeluarMouseEntered

    private void jKeluarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKeluarMouseExited
        jKeluar.setBorder(null);
        jKeluar.setOpaque(false);

    }//GEN-LAST:event_jKeluarMouseExited

    private void jDesainMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDesainMouseEntered

    }//GEN-LAST:event_jDesainMouseEntered

    private void jDesainMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDesainMouseExited

    }//GEN-LAST:event_jDesainMouseExited

    private void jDesainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDesainMouseClicked

    }//GEN-LAST:event_jDesainMouseClicked

    private void jUtamaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jUtamaMouseExited
        // TODO add your handling code here:

        jUtama.setBorder(null);
        jUtama.setOpaque(false);


    }//GEN-LAST:event_jUtamaMouseExited

    private void jUtamaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jUtamaMouseEntered
        // TODO add your handling code here:
        jUtama.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));

    }//GEN-LAST:event_jUtamaMouseEntered

    private void jUtamaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jUtamaMouseClicked
        // TODO add your handling code here:
        jUtama.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jUtama.setBackground(new Color(0, 0, 0, 100));
        jUtama.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FUtama formUtama = new FUtama();
            formUtama.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer


    }//GEN-LAST:event_jUtamaMouseClicked

    private void jUtamaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jUtamaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jUtamaFocusGained

    private void jPelangganFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPelangganFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jPelangganFocusGained

    private void jPelangganMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPelangganMouseClicked
        // TODO add your handling code here:
        jPelanggan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jPelanggan.setBackground(new Color(0, 0, 0, 100));
        jPelanggan.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FPelanggan formPelanggan = new FPelanggan();
            formPelanggan.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer
    }//GEN-LAST:event_jPelangganMouseClicked

    private void jPelangganMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPelangganMouseEntered
        // TODO add your handling code here:
        jPelanggan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
    }//GEN-LAST:event_jPelangganMouseEntered

    private void jPelangganMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPelangganMouseExited
        // TODO add your handling code here:
        jPelanggan.setBorder(null);
        jPelanggan.setOpaque(false);
    }//GEN-LAST:event_jPelangganMouseExited

    private void jTransaksiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTransaksiFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTransaksiFocusGained

    private void jTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTransaksiMouseClicked
        // TODO add your handling code here:
        jTransaksi.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jTransaksi.setBackground(new Color(0, 0, 0, 100));
        jTransaksi.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FTransaksi formTransaksi = new FTransaksi();
            formTransaksi.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer
    }//GEN-LAST:event_jTransaksiMouseClicked

    private void jTransaksiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTransaksiMouseEntered
        // TODO add your handling code here:
        jTransaksi.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
    }//GEN-LAST:event_jTransaksiMouseEntered

    private void jTransaksiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTransaksiMouseExited
        // TODO add your handling code here:
        jTransaksi.setBorder(null);
        jTransaksi.setOpaque(false);
    }//GEN-LAST:event_jTransaksiMouseExited

    private void jLayananFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jLayananFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jLayananFocusGained

    private void jLayananMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLayananMouseClicked
        // TODO add your handling code here:
        jLayanan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jLayanan.setBackground(new Color(0, 0, 0, 100));
        jLayanan.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FLayanan formLayanan = new FLayanan();
            formLayanan.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer
    }//GEN-LAST:event_jLayananMouseClicked

    private void jLayananMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLayananMouseEntered
        // TODO add your handling code here:
        jLayanan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
    }//GEN-LAST:event_jLayananMouseEntered

    private void jLayananMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLayananMouseExited
        // TODO add your handling code here:
        jLayanan.setBorder(null);
        jLayanan.setOpaque(false);
    }//GEN-LAST:event_jLayananMouseExited

    private void jKaryawanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jKaryawanFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jKaryawanFocusGained

    private void jKaryawanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKaryawanMouseClicked
        // TODO add your handling code here:
        jKaryawan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jKaryawan.setBackground(new Color(0, 0, 0, 100));
        jKaryawan.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FKaryawan formKaryawan = new FKaryawan();
            formKaryawan.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer
    }//GEN-LAST:event_jKaryawanMouseClicked

    private void jKaryawanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKaryawanMouseEntered
        // TODO add your handling code here:
        jKaryawan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
    }//GEN-LAST:event_jKaryawanMouseEntered

    private void jKaryawanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKaryawanMouseExited
        // TODO add your handling code here:
        jKaryawan.setBorder(null);
        jKaryawan.setOpaque(false);
    }//GEN-LAST:event_jKaryawanMouseExited

    private void jTentangFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTentangFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTentangFocusGained

    private void jTentangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTentangMouseClicked
        // TODO add your handling code here:
        jTentang.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jTentang.setBackground(new Color(0, 0, 0, 100));
        jTentang.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FTentang formTentang = new FTentang();
            formTentang.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer
    }//GEN-LAST:event_jTentangMouseClicked

    private void jTentangMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTentangMouseEntered
        // TODO add your handling code here:
        jTentang.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
    }//GEN-LAST:event_jTentangMouseEntered

    private void jTentangMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTentangMouseExited
        // TODO add your handling code here:
        jTentang.setBorder(null);
        //        jTentang.setOpaque(false);
    }//GEN-LAST:event_jTentangMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FPelanggan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FPelanggan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FPelanggan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FPelanggan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FPelanggan().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JScrollPane jAlamat;
    private javax.swing.JLabel jDesain;
    private javax.swing.JLabel jKaryawan;
    private javax.swing.JLabel jKeluar;
    private javax.swing.JLabel jLayanan;
    private javax.swing.JLabel jPelanggan;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePelanggan;
    private javax.swing.JLabel jTentang;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel jTransaksi;
    private javax.swing.JLabel jUtama;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNamaPelanggan;
    private javax.swing.JTextField txtNoTelp;
    // End of variables declaration//GEN-END:variables
}
