/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package halaman;

import static halaman.Config.writeLog;
import java.awt.Color;
import java.sql.SQLException;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kelompok 2
 */
public class FLayanan extends javax.swing.JFrame {

    private boolean isEditing = false;

    /**
     * Creates new form FLayanan
     */
    public FLayanan() {
        initComponents();
        setLocationRelativeTo(null);
        load_table();
    }


    private void load_table() {
        // Membuat tampilan model tabel
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                // Semua sel tidak bisa diedit langsung
                return false;
            }
        };

        model.addColumn("No");
        model.addColumn("ID Layanan");
        model.addColumn("Jenis Layanan");
        model.addColumn("Durasi");
        model.addColumn("Harga Per Kg");

        // Hapus data di tabel sebelum memuat ulang
        jTableLayanan.setModel(new DefaultTableModel()); // Bersihkan tabel

        // Menampilkan data dari database ke dalam tabel
        try {
            int no = 1;
            String sql = "SELECT * FROM t_layanan"; // Query untuk mengambil data pelanggan
            java.sql.Connection conn = Config.configDB(); // Menghubungkan ke database
            java.sql.Statement stm = conn.createStatement(); // Membuat statement
            java.sql.ResultSet res = stm.executeQuery(sql); // Menjalankan query dan mendapatkan hasil

            // Menambahkan data ke dalam model tabel
            while (res.next()) {
                model.addRow(new Object[]{
                    no++, // No urut
                    res.getString("id_layanan"), // ID Pelanggan
                    res.getString("jenis_layanan"), // Nama Pelanggan
                    res.getString("durasi"), // No Telepon
                    res.getString("harga") // Alamat Pelanggan
                });
            }

            // Menampilkan model tabel ke jTablePelanggan
            jTableLayanan.setModel(model);
            writeLog("Tampilkan data ke Frame " + getClass().getSimpleName()); // Log aktivitas
        } catch (SQLException e) {
            writeLog("Data tidak dapat ditampilkan: " + e.getMessage()); // Log error
            JOptionPane.showMessageDialog(this, "Data tidak dapat ditampilkan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTambah = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        txtIdLayanan = new javax.swing.JTextField();
        txtJenisLayanan = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        txtPengerjaan = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLayanan = new javax.swing.JTable();
        jUtama = new javax.swing.JLabel();
        jPelanggan = new javax.swing.JLabel();
        jTransaksi = new javax.swing.JLabel();
        jLayanan = new javax.swing.JLabel();
        jKaryawan = new javax.swing.JLabel();
        jTentang = new javax.swing.JLabel();
        jKeluar = new javax.swing.JLabel();
        jDesain = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnTambah.setBackground(new java.awt.Color(47, 171, 225));
        btnTambah.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        btnTambah.setForeground(new java.awt.Color(255, 255, 255));
        btnTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Tambah.png"))); // NOI18N
        btnTambah.setText(" Tambah");
        btnTambah.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnTambah.setBorderPainted(false);
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });
        getContentPane().add(btnTambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 570, 160, 48));

        btnEdit.setBackground(new java.awt.Color(47, 171, 225));
        btnEdit.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit.png"))); // NOI18N
        btnEdit.setText("  Edit");
        btnEdit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEdit.setBorderPainted(false);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        getContentPane().add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 570, 160, 48));

        btnHapus.setBackground(new java.awt.Color(255, 0, 0));
        btnHapus.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        btnHapus.setForeground(new java.awt.Color(255, 255, 255));
        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Hapus.png"))); // NOI18N
        btnHapus.setText("  Hapus");
        btnHapus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnHapus.setBorderPainted(false);
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        getContentPane().add(btnHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 570, 160, 48));

        txtIdLayanan.setBackground(new java.awt.Color(217, 217, 217));
        txtIdLayanan.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtIdLayanan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtIdLayanan.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtIdLayanan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIdLayananFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdLayananFocusLost(evt);
            }
        });
        txtIdLayanan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdLayananActionPerformed(evt);
            }
        });
        getContentPane().add(txtIdLayanan, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 441, 320, 20));

        txtJenisLayanan.setBackground(new java.awt.Color(217, 217, 217));
        txtJenisLayanan.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtJenisLayanan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtJenisLayanan.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtJenisLayanan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtJenisLayananFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtJenisLayananFocusLost(evt);
            }
        });
        txtJenisLayanan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJenisLayananActionPerformed(evt);
            }
        });
        getContentPane().add(txtJenisLayanan, new org.netbeans.lib.awtextra.AbsoluteConstraints(502, 504, 320, 20));

        txtHarga.setBackground(new java.awt.Color(217, 217, 217));
        txtHarga.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtHarga.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtHarga.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtHarga.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtHargaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHargaFocusLost(evt);
            }
        });
        txtHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHargaActionPerformed(evt);
            }
        });
        getContentPane().add(txtHarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 504, 320, 20));

        txtPengerjaan.setBackground(new java.awt.Color(217, 217, 217));
        txtPengerjaan.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtPengerjaan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtPengerjaan.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtPengerjaan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPengerjaanFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPengerjaanFocusLost(evt);
            }
        });
        txtPengerjaan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPengerjaanActionPerformed(evt);
            }
        });
        getContentPane().add(txtPengerjaan, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 441, 320, 20));

        jTableLayanan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableLayanan);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 80, 740, 300));

        jUtama.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jUtama.setEnabled(false);
        jUtama.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jUtamaFocusGained(evt);
            }
        });
        jUtama.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jUtamaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jUtamaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jUtamaMouseExited(evt);
            }
        });
        getContentPane().add(jUtama, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 113, 340, 113));

        jPelanggan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPelanggan.setEnabled(false);
        jPelanggan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPelangganFocusGained(evt);
            }
        });
        jPelanggan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPelangganMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPelangganMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPelangganMouseExited(evt);
            }
        });
        getContentPane().add(jPelanggan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 223, 340, 111));

        jTransaksi.setToolTipText("");
        jTransaksi.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTransaksi.setEnabled(false);
        jTransaksi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTransaksiFocusGained(evt);
            }
        });
        jTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTransaksiMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTransaksiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTransaksiMouseExited(evt);
            }
        });
        getContentPane().add(jTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 331, 340, 111));

        jLayanan.setToolTipText("");
        jLayanan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jLayanan.setEnabled(false);
        jLayanan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jLayananFocusGained(evt);
            }
        });
        jLayanan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLayananMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLayananMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLayananMouseExited(evt);
            }
        });
        getContentPane().add(jLayanan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 440, 340, 110));

        jKaryawan.setToolTipText("");
        jKaryawan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jKaryawan.setEnabled(false);
        jKaryawan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jKaryawanFocusGained(evt);
            }
        });
        jKaryawan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jKaryawanMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jKaryawanMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jKaryawanMouseExited(evt);
            }
        });
        getContentPane().add(jKaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 547, 340, 110));

        jTentang.setToolTipText("");
        jTentang.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTentang.setEnabled(false);
        jTentang.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTentangFocusGained(evt);
            }
        });
        jTentang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTentangMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTentangMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTentangMouseExited(evt);
            }
        });
        getContentPane().add(jTentang, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 654, 340, 57));

        jKeluar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jKeluarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jKeluarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jKeluarMouseExited(evt);
            }
        });
        getContentPane().add(jKeluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 712, 340, 57));

        jDesain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/FLayanan.png"))); // NOI18N
        getContentPane().add(jDesain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
        String id = txtIdLayanan.getText();  // idLayanan
        String jenisLayanan = txtJenisLayanan.getText();  // Nama pelanggan
        String durasi = txtPengerjaan.getText();  // Nomor telepon
        String harga = txtHarga.getText();  // Alamat pelanggan

        // Validasi apakah semua field sudah diisi
        if (id.isEmpty() || jenisLayanan.isEmpty() || durasi.isEmpty() || harga.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
            return;  // Jika ada field yang kosong, batalkan aksi
        }

        // Melakukan koneksi ke database dan menambahkan data pelanggan
        try (java.sql.Connection conn = Config.configDB()) {
            // SQL query untuk menambahkan data pelanggan dengan id_layanan
            String sql = "INSERT INTO t_layanan (id_layanan, jenis_layanan, durasi, harga) VALUES (?, ?, ?, ?)";
            var pst = conn.prepareStatement(sql);

            // Menyiapkan data untuk dimasukkan ke dalam query
            pst.setString(1, id);  // Menyertakan id_pelanggan
            pst.setString(2, jenisLayanan);  // Jenis Layanan
            pst.setString(3, durasi);  // No Telepon
            pst.setString(4, harga);  // harga

            // Menjalankan query insert
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan!");  // Menampilkan pesan sukses
            load_table();  // Memuat ulang data tabel
        } catch (Exception e) {
            // Menangani exception jika ada error
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal menambahkan data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if (!isEditing) {
            // Jika mode edit belum aktif
            int selectedRow = jTableLayanan.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(null, "Pilih layanan yang ingin diedit", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Ambil data dari tabel sesuai dengan indeks kolom
            String idLayanan = jTableLayanan.getValueAt(selectedRow, 1).toString(); // Kolom ID paket
            String jenisLayanan = jTableLayanan.getValueAt(selectedRow, 2).toString(); // Kolom jenis layanan
            String durasi = jTableLayanan.getValueAt(selectedRow, 3).toString(); // Kolom durasi
            String harga = jTableLayanan.getValueAt(selectedRow, 4).toString(); // Kolom harga

            // Isi form dengan data yang benar
            txtIdLayanan.setText(idLayanan);  // Tampilkan ID paket
            txtJenisLayanan.setText(jenisLayanan);  // Tampilkan jenis layanan
            txtPengerjaan.setText(durasi);  // Tampilkan durasi
            txtHarga.setText(harga);  // Tampilkan harga

            // Ubah status menjadi editing
            isEditing = true;
            btnEdit.setText("Simpan"); // Mengubah teks tombol menjadi Simpan

        } else {
            // Mode Edit aktif, simpan perubahan
            String idLayanan = txtIdLayanan.getText();  // ID Layanan
            String jenisLayanan = txtJenisLayanan.getText();  // Nama layanan
            String durasi = txtPengerjaan.getText();  // Durasi pengerjaan
            String harga = txtHarga.getText();  // Harga layanan

            // Validasi input
            if (jenisLayanan.isEmpty() || durasi.isEmpty() || harga.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Semua field harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Update data di database
            try (java.sql.Connection conn = Config.configDB()) {
                String sql = "UPDATE t_layanan SET jenis_layanan = ?, durasi = ?, harga = ? WHERE id_layanan = ?";
                var pst = conn.prepareStatement(sql);
                pst.setString(1, jenisLayanan);  // Jenis Layanan
                pst.setString(2, durasi);  // Durasi pengerjaan
                pst.setString(3, harga);  // Harga (sudah dikonversi ke integer)
                pst.setString(4, idLayanan);  // ID paket untuk update yang spesifik

                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data berhasil diperbarui!");

                // Muat ulang tabel untuk menampilkan data terbaru
                load_table();  // Memanggil load_table setelah update selesai

            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Gagal memperbarui data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }

            // Kembali ke mode normal
            isEditing = false;
            btnEdit.setText("Edit");
            txtIdLayanan.setEditable(true); // Aktifkan kembali input ID jika diperlukan
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int selectedRow = jTableLayanan.getSelectedRow();

// Cek jika tidak ada baris yang dipilih
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Pilih layanan yang ingin dihapus", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

// Ambil ID dari kolom yang sesuai (misalnya kolom ID Layanan adalah indeks 1)
        String id = jTableLayanan.getValueAt(selectedRow, 1).toString();

// Tampilkan konfirmasi sebelum menghapus
        int confirm = JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try (java.sql.Connection conn = Config.configDB()) {
                // Query untuk menghapus data layanan berdasarkan ID
                String sql = "DELETE FROM t_layanan WHERE id_layanan = ?";
                var pst = conn.prepareStatement(sql);
                pst.setString(1, id);  // Set ID yang dipilih pada parameter query

                int affectedRows = pst.executeUpdate();  // Eksekusi query dan mendapatkan jumlah baris yang terpengaruh
                if (affectedRows > 0) {
                    JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
                    load_table();  // Memuat ulang tabel setelah penghapusan
                } else {
                    JOptionPane.showMessageDialog(null, "Data tidak ditemukan, atau sudah terhapus.");
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Gagal menghapus data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void txtIdLayananFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdLayananFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdLayananFocusGained

    private void txtIdLayananFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdLayananFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdLayananFocusLost

    private void txtIdLayananActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdLayananActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdLayananActionPerformed

    private void txtJenisLayananFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtJenisLayananFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJenisLayananFocusGained

    private void txtJenisLayananFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtJenisLayananFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJenisLayananFocusLost

    private void txtJenisLayananActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJenisLayananActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJenisLayananActionPerformed

    private void txtHargaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHargaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHargaFocusGained

    private void txtHargaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHargaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHargaFocusLost

    private void txtHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHargaActionPerformed

    private void txtPengerjaanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPengerjaanFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPengerjaanFocusGained

    private void txtPengerjaanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPengerjaanFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPengerjaanFocusLost

    private void txtPengerjaanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPengerjaanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPengerjaanActionPerformed

    private void jUtamaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jUtamaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jUtamaFocusGained

    private void jUtamaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jUtamaMouseClicked
        // TODO add your handling code here:
        jUtama.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jUtama.setBackground(new Color(0, 0, 0, 100));
        jUtama.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FUtama formUtama = new FUtama();
            formUtama.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer

    }//GEN-LAST:event_jUtamaMouseClicked

    private void jUtamaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jUtamaMouseEntered
        // TODO add your handling code here:
        jUtama.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
    }//GEN-LAST:event_jUtamaMouseEntered

    private void jUtamaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jUtamaMouseExited
        // TODO add your handling code here:

        jUtama.setBorder(null);
        jUtama.setOpaque(false);

    }//GEN-LAST:event_jUtamaMouseExited

    private void jPelangganFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPelangganFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jPelangganFocusGained

    private void jPelangganMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPelangganMouseClicked
        // TODO add your handling code here:
        jPelanggan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jPelanggan.setBackground(new Color(0, 0, 0, 100));
        jPelanggan.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FPelanggan formPelanggan = new FPelanggan();
            formPelanggan.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer
    }//GEN-LAST:event_jPelangganMouseClicked

    private void jPelangganMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPelangganMouseEntered
        // TODO add your handling code here:
        jPelanggan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
    }//GEN-LAST:event_jPelangganMouseEntered

    private void jPelangganMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPelangganMouseExited
        // TODO add your handling code here:
        jPelanggan.setBorder(null);
        jPelanggan.setOpaque(false);
    }//GEN-LAST:event_jPelangganMouseExited

    private void jTransaksiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTransaksiFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTransaksiFocusGained

    private void jTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTransaksiMouseClicked
        // TODO add your handling code here:
        jTransaksi.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jTransaksi.setBackground(new Color(0, 0, 0, 100));
        jTransaksi.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FTransaksi formTransaksi = new FTransaksi();
            formTransaksi.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer
    }//GEN-LAST:event_jTransaksiMouseClicked

    private void jTransaksiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTransaksiMouseEntered
        // TODO add your handling code here:
        jTransaksi.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
    }//GEN-LAST:event_jTransaksiMouseEntered

    private void jTransaksiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTransaksiMouseExited
        // TODO add your handling code here:
        jTransaksi.setBorder(null);
        jTransaksi.setOpaque(false);
    }//GEN-LAST:event_jTransaksiMouseExited

    private void jLayananFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jLayananFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jLayananFocusGained

    private void jLayananMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLayananMouseClicked
        // TODO add your handling code here:
        jLayanan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jLayanan.setBackground(new Color(0, 0, 0, 100));
        jLayanan.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FLayanan formLayanan = new FLayanan();
            formLayanan.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer
    }//GEN-LAST:event_jLayananMouseClicked

    private void jLayananMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLayananMouseEntered
        // TODO add your handling code here:
        jLayanan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
    }//GEN-LAST:event_jLayananMouseEntered

    private void jLayananMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLayananMouseExited
        // TODO add your handling code here:
        jLayanan.setBorder(null);
        jLayanan.setOpaque(false);
    }//GEN-LAST:event_jLayananMouseExited

    private void jKaryawanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jKaryawanFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jKaryawanFocusGained

    private void jKaryawanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKaryawanMouseClicked
        // TODO add your handling code here:
        jKaryawan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jKaryawan.setBackground(new Color(0, 0, 0, 100));
        jKaryawan.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FKaryawan formKaryawan = new FKaryawan();
            formKaryawan.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer
    }//GEN-LAST:event_jKaryawanMouseClicked

    private void jKaryawanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKaryawanMouseEntered
        // TODO add your handling code here:
        jKaryawan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
    }//GEN-LAST:event_jKaryawanMouseEntered

    private void jKaryawanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKaryawanMouseExited
        // TODO add your handling code here:
        jKaryawan.setBorder(null);
        jKaryawan.setOpaque(false);
    }//GEN-LAST:event_jKaryawanMouseExited

    private void jTentangFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTentangFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTentangFocusGained

    private void jTentangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTentangMouseClicked
        // TODO add your handling code here:
        jTentang.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jTentang.setBackground(new Color(0, 0, 0, 100));
        jTentang.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FTentang formTentang = new FTentang();
            formTentang.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer
    }//GEN-LAST:event_jTentangMouseClicked

    private void jTentangMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTentangMouseEntered
        // TODO add your handling code here:
        jTentang.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
    }//GEN-LAST:event_jTentangMouseEntered

    private void jTentangMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTentangMouseExited
        // TODO add your handling code here:
        jTentang.setBorder(null);
        //        jTentang.setOpaque(false);
    }//GEN-LAST:event_jTentangMouseExited

    private void jKeluarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKeluarMouseClicked
        // TODO add your handling code here:
        jKeluar.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        int response = JOptionPane.showConfirmDialog(this,
            "Apakah Anda yakin ingin keluar?",
            "Konfirmasi Keluar",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE);

        if (response == JOptionPane.YES_OPTION) {
            //            System.exit(0);
            FLogin loginForm = new FLogin();
            loginForm.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_jKeluarMouseClicked

    private void jKeluarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKeluarMouseEntered
        jKeluar.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));

    }//GEN-LAST:event_jKeluarMouseEntered

    private void jKeluarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKeluarMouseExited
        jKeluar.setBorder(null);
        jKeluar.setOpaque(false);
    }//GEN-LAST:event_jKeluarMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FLayanan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FLayanan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FLayanan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FLayanan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FLayanan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JLabel jDesain;
    private javax.swing.JLabel jKaryawan;
    private javax.swing.JLabel jKeluar;
    private javax.swing.JLabel jLayanan;
    private javax.swing.JLabel jPelanggan;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableLayanan;
    private javax.swing.JLabel jTentang;
    private javax.swing.JLabel jTransaksi;
    private javax.swing.JLabel jUtama;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtIdLayanan;
    private javax.swing.JTextField txtJenisLayanan;
    private javax.swing.JTextField txtPengerjaan;
    // End of variables declaration//GEN-END:variables
}
