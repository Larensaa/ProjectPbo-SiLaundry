/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package halaman;

import static halaman.Config.writeLog;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kelompok 2
 */
public class FTransaksi extends javax.swing.JFrame {

    private boolean isEditing = false;

    /**
     * Creates new form FTransaksi
     */
    public FTransaksi() {
        initComponents();
        setLocationRelativeTo(null);
        loadComboBoxPelanggan();
        loadComboBoxStatus();
        loadComboBoxLayanan();
        load_table();

        cbIdPelanggan.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Ambil ID Pelanggan yang dipilih
                String idPelanggan = (String) cbIdPelanggan.getSelectedItem();

                // Ambil Nama Pelanggan berdasarkan ID
                if (idPelanggan != null && !idPelanggan.equals("-- Pilih Pelanggan --")) {
                    tampilkanNamaPelanggan(idPelanggan);
                }
            }
        });
        cbLayanan.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Ambil jenis layanan yang dipilih
                String layanan = (String) cbLayanan.getSelectedItem();

                // Ambil harga layanan berdasarkan jenis layanan
                if (layanan != null && !layanan.equals("-- Pilih Layanan --")) {
                    tampilkanTotal(layanan);
                }
            }
        });

    }

    private void tampilkanTotal(String layanan) {
        try {
            // Query untuk mendapatkan total berdasarkan layanan
            String sql = "SELECT harga FROM t_layanan WHERE id_layanan = ?";
            java.sql.Connection conn = Config.configDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, layanan);

            java.sql.ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                // Ambil harga layanan dari hasil query
                double hargaLayanan = rs.getDouble("harga");

                // Format harga untuk menghilangkan angka desimal jika 0
                String hargaFormatted = String.format("%.0f", hargaLayanan); // Menghilangkan angka desimal jika 0

                // Tampilkan harga layanan sebagai String
                txtTotal.setText(hargaFormatted);
            } else {
                // Jika tidak ada, clear harga layanan
                txtTotal.setText("");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void tampilkanNamaPelanggan(String idPelanggan) {
        try {
            // Query untuk mendapatkan nama pelanggan berdasarkan ID
            String sql = "SELECT nama FROM t_pelanggan WHERE id_pelanggan = ?";
            java.sql.Connection conn = Config.configDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, idPelanggan);

            java.sql.ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                // Ambil Nama Pelanggan dari hasil query
                String namaPelanggan = rs.getString("nama");
                // Tampilkan di TextField Nama Pelanggan
                txtNama.setText(namaPelanggan);
            } else {
                // Jika tidak ada, clear nama pelanggan
                txtNama.setText("");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void load_table() {
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Non-editable cells
            }
        };

        model.addColumn("No");
        model.addColumn("ID Transaksi");
        model.addColumn("Tanggal");
        model.addColumn("Status");
        model.addColumn("ID Layanan");
        model.addColumn("Berat");
        model.addColumn("Total Pembayaran");
        model.addColumn("ID Pelanggan");

        jTableTransaksi.setModel(new DefaultTableModel());

        try {
            int no = 1;
            String sql = "SELECT * FROM t_transaksi";
            java.sql.Connection conn = Config.configDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);

            while (res.next()) {
                model.addRow(new Object[]{
                    no++, // Nomor
                    res.getString("id_transaksi"),
                    res.getDate("tanggal"),
                    res.getString("status"),
                    res.getString("id_layanan"),
                    res.getInt("berat"),
                    res.getInt("total_pembayaran"),
                    res.getString("id_pelanggan")
                });
            }

            jTableTransaksi.setModel(model);
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Data tidak dapat ditampilkan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNama = new javax.swing.JTextField();
        txtBerat = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        cbLayanan = new javax.swing.JComboBox<>();
        cbIdPelanggan = new javax.swing.JComboBox<>();
        cbStatus = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTransaksi = new javax.swing.JTable();
        btnTambah = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        txtNoTransaksi = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jUtama = new javax.swing.JLabel();
        jPelanggan = new javax.swing.JLabel();
        jTransaksi = new javax.swing.JLabel();
        jLayanan = new javax.swing.JLabel();
        jKaryawan = new javax.swing.JLabel();
        jTentang = new javax.swing.JLabel();
        jKeluar = new javax.swing.JLabel();
        jDesain = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNama.setBackground(new java.awt.Color(217, 217, 217));
        txtNama.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtNama.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtNama.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtNama.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNamaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNamaFocusLost(evt);
            }
        });
        txtNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaActionPerformed(evt);
            }
        });
        getContentPane().add(txtNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 335, 330, 20));

        txtBerat.setBackground(new java.awt.Color(217, 217, 217));
        txtBerat.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtBerat.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtBerat.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtBerat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBeratFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBeratFocusLost(evt);
            }
        });
        txtBerat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBeratActionPerformed(evt);
            }
        });
        getContentPane().add(txtBerat, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 270, 330, 20));

        txtTotal.setBackground(new java.awt.Color(217, 217, 217));
        txtTotal.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtTotal.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtTotal.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtTotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTotalFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTotalFocusLost(evt);
            }
        });
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });
        getContentPane().add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 335, 330, 20));

        cbLayanan.setBackground(new java.awt.Color(217, 217, 217));
        cbLayanan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(cbLayanan, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 210, 350, -1));

        cbIdPelanggan.setBackground(new java.awt.Color(187, 187, 187));
        cbIdPelanggan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbIdPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbIdPelangganActionPerformed(evt);
            }
        });
        getContentPane().add(cbIdPelanggan, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 210, 350, -1));

        cbStatus.setBackground(new java.awt.Color(187, 187, 187));
        cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStatusActionPerformed(evt);
            }
        });
        getContentPane().add(cbStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 270, 350, -1));

        jTableTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableTransaksi);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 440, 720, 240));

        btnTambah.setBackground(new java.awt.Color(47, 171, 225));
        btnTambah.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        btnTambah.setForeground(new java.awt.Color(255, 255, 255));
        btnTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Tambah.png"))); // NOI18N
        btnTambah.setText(" Tambah");
        btnTambah.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnTambah.setBorderPainted(false);
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });
        getContentPane().add(btnTambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 370, 160, 48));

        btnEdit.setBackground(new java.awt.Color(47, 171, 225));
        btnEdit.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit.png"))); // NOI18N
        btnEdit.setText("  Edit");
        btnEdit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEdit.setBorderPainted(false);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        getContentPane().add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 370, 160, 48));

        btnHapus.setBackground(new java.awt.Color(255, 0, 0));
        btnHapus.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        btnHapus.setForeground(new java.awt.Color(255, 255, 255));
        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Hapus.png"))); // NOI18N
        btnHapus.setText("  Hapus");
        btnHapus.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnHapus.setBorderPainted(false);
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        getContentPane().add(btnHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 370, 160, 48));

        txtNoTransaksi.setBackground(new java.awt.Color(217, 217, 217));
        txtNoTransaksi.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtNoTransaksi.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtNoTransaksi.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtNoTransaksi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNoTransaksiFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNoTransaksiFocusLost(evt);
            }
        });
        txtNoTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoTransaksiActionPerformed(evt);
            }
        });
        getContentPane().add(txtNoTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 150, 330, 20));

        jDateChooser1.setBackground(new java.awt.Color(217, 217, 217));
        getContentPane().add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 140, 350, 20));

        jUtama.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jUtama.setEnabled(false);
        jUtama.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jUtamaFocusGained(evt);
            }
        });
        jUtama.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jUtamaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jUtamaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jUtamaMouseExited(evt);
            }
        });
        getContentPane().add(jUtama, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 112, 340, 113));

        jPelanggan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPelanggan.setEnabled(false);
        jPelanggan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPelangganFocusGained(evt);
            }
        });
        jPelanggan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPelangganMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPelangganMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPelangganMouseExited(evt);
            }
        });
        getContentPane().add(jPelanggan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 223, 340, 110));

        jTransaksi.setToolTipText("");
        jTransaksi.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTransaksi.setEnabled(false);
        jTransaksi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTransaksiFocusGained(evt);
            }
        });
        jTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTransaksiMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTransaksiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTransaksiMouseExited(evt);
            }
        });
        getContentPane().add(jTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 340, 111));

        jLayanan.setToolTipText("");
        jLayanan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jLayanan.setEnabled(false);
        jLayanan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jLayananFocusGained(evt);
            }
        });
        jLayanan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLayananMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLayananMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLayananMouseExited(evt);
            }
        });
        getContentPane().add(jLayanan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 440, 340, 109));

        jKaryawan.setToolTipText("");
        jKaryawan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jKaryawan.setEnabled(false);
        jKaryawan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jKaryawanFocusGained(evt);
            }
        });
        jKaryawan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jKaryawanMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jKaryawanMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jKaryawanMouseExited(evt);
            }
        });
        getContentPane().add(jKaryawan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 547, 340, 110));

        jTentang.setToolTipText("");
        jTentang.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTentang.setEnabled(false);
        jTentang.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTentangFocusGained(evt);
            }
        });
        jTentang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTentangMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTentangMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTentangMouseExited(evt);
            }
        });
        getContentPane().add(jTentang, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 655, 340, 57));

        jKeluar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jKeluarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jKeluarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jKeluarMouseExited(evt);
            }
        });
        getContentPane().add(jKeluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 710, 342, 60));

        jDesain.setBackground(new java.awt.Color(217, 217, 217));
        jDesain.setForeground(new java.awt.Color(217, 217, 217));
        jDesain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/FTransaksi.png"))); // NOI18N
        jDesain.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        getContentPane().add(jDesain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void loadComboBoxPelanggan() {
        try {
            String sql = "SELECT * FROM t_pelanggan"; // Ganti query ke tabel pelanggan
            java.sql.Connection conn = (Connection) Config.configDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);

            // Bersihkan ComboBox sebelum menambahkan data
            cbIdPelanggan.removeAllItems();
            cbIdPelanggan.addItem("-- Pilih Pelanggan --"); // Placeholder awal

            while (res.next()) {
                int idPelanggan = res.getInt("id_pelanggan"); // Ganti sesuai nama kolom di tabel pelanggan
//              arrPelanggan.add(idPelanggan); // Tambahkan ID pelanggan ke array (jika diperlukan)
                cbIdPelanggan.addItem(String.valueOf(idPelanggan));
            }

            Config.writeLog("ComboBox pelanggan berhasil dimuat dengan data.");
        } catch (Exception e) {
            Config.writeLog("Error saat memuat ComboBox pelanggan: " + e.getMessage());
        }
    }

    private void loadComboBoxStatus() {
         try {
        // Query untuk mengambil status yang unik dari database
        String sql = "SELECT DISTINCT status FROM t_transaksi"; // Ambil status yang berbeda saja
        java.sql.Connection conn = Config.configDB();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet res = stm.executeQuery(sql);

        // Bersihkan ComboBox sebelum menambahkan data
        cbStatus.removeAllItems();
        cbStatus.addItem("-- Pilih Status --"); // Placeholder awal

        // Tambahkan semua status yang ada di database ke ComboBox
        while (res.next()) {
            String status = res.getString("status");
            cbStatus.addItem(status); // Menambahkan status yang ditemukan
        }

        Config.writeLog("ComboBox status berhasil dimuat.");
    } catch (Exception e) {
        Config.writeLog("Error saat memuat ComboBox status: " + e.getMessage());
    }
    }

    private void loadComboBoxLayanan() {
        try {
            String sql = "SELECT id_layanan FROM t_layanan"; // Pastikan mengambil nilai status yang unik
            java.sql.Connection conn = (Connection) Config.configDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);

            // Bersihkan ComboBox sebelum menambahkan data
            cbLayanan.removeAllItems();
            cbLayanan.addItem("-- Pilih ID Layanan --"); // Placeholder awalcbStatus.addItem("Test Status 1");

            while (res.next()) {
                String idLayanan = res.getString("id_layanan"); // Ambil nilai jenis_layanan
                cbLayanan.addItem(idLayanan); // Tambahkan jenis_layanan ke ComboBox
            }
            Config.writeLog("ComboBox Layanan berhasil dimuat.");
        } catch (Exception e) {
            Config.writeLog("Error saat memuat ComboBox Layanan: " + e.getMessage());
        }
    }


    private void txtNamaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNamaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaFocusGained

    private void txtNamaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNamaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaFocusLost

    private void txtNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaActionPerformed

    private void cbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbStatusActionPerformed


    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // Ambil data dari input form
        String idTransaksi = txtNoTransaksi.getText();
        java.util.Date tanggal = jDateChooser1.getDate();
        String status = cbStatus.getSelectedItem().toString();
        String idLayanan = cbLayanan.getSelectedItem().toString();
        String berat = txtBerat.getText();
        String total = txtTotal.getText();
        String idPelanggan = cbIdPelanggan.getSelectedItem().toString();

        // Validasi input
        if (idTransaksi.isEmpty() || tanggal == null || status.isEmpty() || idLayanan.isEmpty() || berat.isEmpty() || total.isEmpty() || idPelanggan.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Tambahkan data ke database
        try (java.sql.Connection conn = Config.configDB()) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String tanggalString = sdf.format(tanggal);

            String sql = "INSERT INTO t_transaksi (id_transaksi, tanggal, status, id_layanan, berat, total_pembayaran, id_pelanggan) VALUES (?, ?, ?, ?, ?, ?, ?)";
            var pst = conn.prepareStatement(sql);
            pst.setString(1, idTransaksi);
            pst.setString(2, tanggalString);
            pst.setString(3, status);
            pst.setString(4, idLayanan);
            pst.setInt(5, Integer.parseInt(berat));
            pst.setInt(6, Integer.parseInt(total));
            pst.setString(7, idPelanggan);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan!");
            load_table();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal menambahkan data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if (!isEditing) {
            // Ambil data dari tabel untuk mengisi field input
            int selectedRow = jTableTransaksi.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Pilih data yang ingin diedit", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            txtNoTransaksi.setText(jTableTransaksi.getValueAt(selectedRow, 1).toString());  // ID Transaksi
            jDateChooser1.setDate((java.util.Date) jTableTransaksi.getValueAt(selectedRow, 2));  // Tanggal (gunakan JDateChooser)
            cbStatus.setSelectedItem(jTableTransaksi.getValueAt(selectedRow, 3).toString());  // Status
            cbLayanan.setSelectedItem(jTableTransaksi.getValueAt(selectedRow, 4).toString());  // ID Layanan
            txtBerat.setText(jTableTransaksi.getValueAt(selectedRow, 5).toString());  // Berat
            txtTotal.setText(jTableTransaksi.getValueAt(selectedRow, 6).toString());  // Total Pembayaran
            cbIdPelanggan.setSelectedItem(jTableTransaksi.getValueAt(selectedRow, 7).toString());  // ID Pelanggan

            isEditing = true;
            btnEdit.setText("Simpan");
            txtNoTransaksi.setEditable(false);  // ID transaksi tidak boleh diubah
        } else {
            // Simpan perubahan
            String idTransaksi = txtNoTransaksi.getText();  // ID Transaksi
            java.util.Date tanggal = jDateChooser1.getDate();  // Tanggal
            String status = cbStatus.getSelectedItem().toString();  // Status
            String idLayanan = cbLayanan.getSelectedItem().toString();  // ID Layanan
            String berat = txtBerat.getText();  // Berat
            String total = txtTotal.getText();  // Total Pembayaran
            String idPelanggan = cbIdPelanggan.getSelectedItem().toString();  // ID Pelanggan

            // Validasi input
            if (tanggal == null || status.isEmpty() || idLayanan.isEmpty()
                    || berat.isEmpty() || total.isEmpty() || idPelanggan.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Semua field harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try (java.sql.Connection conn = Config.configDB()) {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String tanggalString = sdf.format(tanggal);

                String sql = "UPDATE t_transaksi SET tanggal = ?, status = ?, id_layanan = ?, berat = ?, total_pembayaran = ?, id_pelanggan = ? "
                        + "WHERE id_transaksi = ?";
                var pst = conn.prepareStatement(sql);

                // Mengisi parameter SQL
                pst.setString(1, tanggalString);  // Tanggal
                pst.setString(2, status);  // Status
                pst.setInt(3, Integer.parseInt(idLayanan));  // ID Layanan
                pst.setInt(4, Integer.parseInt(berat));  // Berat
                pst.setInt(5, Integer.parseInt(total));  // Total Pembayaran
                pst.setInt(6, Integer.parseInt(idPelanggan));  // ID Pelanggan
                pst.setString(7, idTransaksi);  // ID Transaksi (untuk kondisi WHERE)

                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data berhasil diperbarui!");
                load_table();  // Memuat ulang tabel setelah update
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Gagal memperbarui data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }

            isEditing = false;
            btnEdit.setText("Edit");
            txtNoTransaksi.setEditable(true);
        }

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
//       
        //// Mendapatkan baris yang dipilih
        int selectedRow = jTableTransaksi.getSelectedRow();

        // Jika tidak ada baris yang dipilih
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin dihapus!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Mengambil ID Transaksi dari kolom pertama (sesuaikan dengan kolom yang benar jika perlu)
        String idTransaksi = jTableTransaksi.getValueAt(selectedRow, 0).toString();  // ID Transaksi

        // Konfirmasi penghapusan data
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus Data ini " + idTransaksi + "?",
                "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                // Query untuk menghapus data transaksi berdasarkan ID
                String sql = "DELETE FROM t_transaksi WHERE id_transaksi = ?";
                java.sql.Connection conn = Config.configDB();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);

                // Mengatur parameter ID transaksi yang akan dihapus
                pst.setString(1, idTransaksi);

                // Menjalankan query
                int rowsAffected = pst.executeUpdate();

                // Mengecek apakah ada baris yang dihapus
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    load_table();  // Memuat ulang data di tabel
                    writeLog("Data transaksi dengan ID " + idTransaksi + " berhasil dihapus");
                } else {
                    JOptionPane.showMessageDialog(this, "Data tidak ditemukan atau gagal dihapus", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                // Menangani error saat penghapusan
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void txtNoTransaksiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNoTransaksiFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoTransaksiFocusGained

    private void txtNoTransaksiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNoTransaksiFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoTransaksiFocusLost

    private void txtNoTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoTransaksiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoTransaksiActionPerformed

    private void txtBeratFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBeratFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBeratFocusGained

    private void txtBeratFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBeratFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBeratFocusLost

    private void txtBeratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBeratActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBeratActionPerformed

    private void txtTotalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTotalFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalFocusGained

    private void txtTotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTotalFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalFocusLost

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void cbIdPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbIdPelangganActionPerformed

    }//GEN-LAST:event_cbIdPelangganActionPerformed

    private void jUtamaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jUtamaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jUtamaFocusGained

    private void jUtamaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jUtamaMouseClicked
        // TODO add your handling code here:
        jUtama.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jUtama.setBackground(new Color(0, 0, 0, 100));
        jUtama.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FUtama formUtama = new FUtama();
            formUtama.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer

    }//GEN-LAST:event_jUtamaMouseClicked

    private void jUtamaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jUtamaMouseEntered
        // TODO add your handling code here:
        jUtama.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));

    }//GEN-LAST:event_jUtamaMouseEntered

    private void jUtamaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jUtamaMouseExited
        // TODO add your handling code here:
        jUtama.setBorder(null);
        jUtama.setOpaque(false);
    }//GEN-LAST:event_jUtamaMouseExited

    private void jPelangganFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPelangganFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jPelangganFocusGained

    private void jPelangganMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPelangganMouseClicked
        // TODO add your handling code here:
        jPelanggan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jPelanggan.setBackground(new Color(0, 0, 0, 100));
        jPelanggan.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FPelanggan formPelanggan = new FPelanggan();
            formPelanggan.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer
    }//GEN-LAST:event_jPelangganMouseClicked

    private void jPelangganMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPelangganMouseEntered
        // TODO add your handling code here:
        jPelanggan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
    }//GEN-LAST:event_jPelangganMouseEntered

    private void jPelangganMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPelangganMouseExited
        // TODO add your handling code here:
        jPelanggan.setBorder(null);
        jPelanggan.setOpaque(false);
    }//GEN-LAST:event_jPelangganMouseExited

    private void jTransaksiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTransaksiFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTransaksiFocusGained

    private void jTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTransaksiMouseClicked
        // TODO add your handling code here:
        jTransaksi.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jTransaksi.setBackground(new Color(0, 0, 0, 100));
        jTransaksi.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FTransaksi formTransaksi = new FTransaksi();
            formTransaksi.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer
    }//GEN-LAST:event_jTransaksiMouseClicked

    private void jTransaksiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTransaksiMouseEntered
        // TODO add your handling code here:
        jTransaksi.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
    }//GEN-LAST:event_jTransaksiMouseEntered

    private void jTransaksiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTransaksiMouseExited
        // TODO add your handling code here:
        jTransaksi.setBorder(null);
        jTransaksi.setOpaque(false);
    }//GEN-LAST:event_jTransaksiMouseExited

    private void jLayananFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jLayananFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jLayananFocusGained

    private void jLayananMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLayananMouseClicked
        // TODO add your handling code here:
        jLayanan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jLayanan.setBackground(new Color(0, 0, 0, 100));
        jLayanan.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FLayanan formLayanan = new FLayanan();
            formLayanan.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer
    }//GEN-LAST:event_jLayananMouseClicked

    private void jLayananMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLayananMouseEntered
        // TODO add your handling code here:
        jLayanan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
    }//GEN-LAST:event_jLayananMouseEntered

    private void jLayananMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLayananMouseExited
        // TODO add your handling code here:
        jLayanan.setBorder(null);
        jLayanan.setOpaque(false);
    }//GEN-LAST:event_jLayananMouseExited

    private void jKaryawanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jKaryawanFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jKaryawanFocusGained

    private void jKaryawanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKaryawanMouseClicked
        // TODO add your handling code here:
        jKaryawan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jKaryawan.setBackground(new Color(0, 0, 0, 100));
        jKaryawan.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FKaryawan formKaryawan = new FKaryawan();
            formKaryawan.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer
    }//GEN-LAST:event_jKaryawanMouseClicked

    private void jKaryawanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKaryawanMouseEntered
        // TODO add your handling code here:
        jKaryawan.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
    }//GEN-LAST:event_jKaryawanMouseEntered

    private void jKaryawanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKaryawanMouseExited
        // TODO add your handling code here:
        jKaryawan.setBorder(null);
        jKaryawan.setOpaque(false);
    }//GEN-LAST:event_jKaryawanMouseExited

    private void jTentangFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTentangFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTentangFocusGained

    private void jTentangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTentangMouseClicked
        // TODO add your handling code here:
        jTentang.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        jTentang.setBackground(new Color(0, 0, 0, 100));
        jTentang.setOpaque(true);

        Timer timer = new Timer(500, e -> {
            // Menutup frame yang ada
            JFrame currentFrame = (JFrame) SwingUtilities.getWindowAncestor(jUtama);
            currentFrame.dispose(); // Menutup frame yang ada

            // Membuka kembali frame utama
            FTentang formTentang = new FTentang();
            formTentang.setVisible(true);  // Menampilkan frame utama
        });
        timer.setRepeats(false);  // Pastikan hanya sekali
        timer.start();  // Mulai timer
    }//GEN-LAST:event_jTentangMouseClicked

    private void jTentangMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTentangMouseEntered
        // TODO add your handling code here:
        jTentang.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
    }//GEN-LAST:event_jTentangMouseEntered

    private void jTentangMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTentangMouseExited
        // TODO add your handling code here:
        jTentang.setBorder(null);
        //        jTentang.setOpaque(false);
    }//GEN-LAST:event_jTentangMouseExited

    private void jKeluarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKeluarMouseClicked
        // TODO add your handling code here:
        jKeluar.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));
        int response = JOptionPane.showConfirmDialog(this,
                "Apakah Anda yakin ingin keluar?",
                "Konfirmasi Keluar",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);

        if (response == JOptionPane.YES_OPTION) {
            //            System.exit(0);
            FLogin loginForm = new FLogin();
            loginForm.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_jKeluarMouseClicked

    private void jKeluarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKeluarMouseEntered
        // TODO add your handling code here:
        jKeluar.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 4));

    }//GEN-LAST:event_jKeluarMouseEntered

    private void jKeluarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jKeluarMouseExited
        // TODO add your handling code here:
        jKeluar.setBorder(null);
        jKeluar.setOpaque(false);
    }//GEN-LAST:event_jKeluarMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, "ClassNotFoundException", ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, "Error Instantiation", ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, "Error IllegalAccess", ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, "Look and Feel Error", ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new FTransaksi().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JComboBox<String> cbIdPelanggan;
    private javax.swing.JComboBox<String> cbLayanan;
    private javax.swing.JComboBox<String> cbStatus;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jDesain;
    private javax.swing.JLabel jKaryawan;
    private javax.swing.JLabel jKeluar;
    private javax.swing.JLabel jLayanan;
    private javax.swing.JLabel jPelanggan;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableTransaksi;
    private javax.swing.JLabel jTentang;
    private javax.swing.JLabel jTransaksi;
    private javax.swing.JLabel jUtama;
    private javax.swing.JTextField txtBerat;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtNoTransaksi;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
